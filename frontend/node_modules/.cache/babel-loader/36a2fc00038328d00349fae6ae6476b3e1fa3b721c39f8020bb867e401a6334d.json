{"ast":null,"code":"var _jsxFileName = \"/Users/jihoon/Desktop/study/tdd-jest/test-shop/frontend/src/contexts/OrderContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useMemo, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderContext = /*#__PURE__*/createContext();\nexport function OrderContextProvider(props) {\n  _s();\n  const [orderCounts, setOrderCounts] = useState({\n    products: new Map(),\n    options: new Map()\n  });\n  const [totals, setTotals] = useState({\n    products: 0,\n    options: 0,\n    total: 0\n  });\n  useEffect(() => {\n    const productsTotal = calculateSubtotal('products', orderCounts);\n    const optionsTotal = calculateSubtotal('options', orderCounts);\n    const total = productsTotal + optionsTotal;\n  }, [orderCountes]);\n\n  // useMemo 자식 컴포넌트들의 재랜더링 최적화\n  const value = useMemo(() => {\n    function updateItemCount(itemName, newItemCount, orderType) {\n      const newOrderCounts = {\n        ...orderCounts\n      };\n      const orderCountsMap = orderCounts[orderType];\n      orderCountsMap.set(itemName, parseInt(newItemCount));\n      setOrderCounts(newOrderCounts);\n    }\n    return [{\n      ...orderCounts\n    }, updateItemCount];\n  }, [orderCounts]);\n  return /*#__PURE__*/_jsxDEV(OrderContext.Provider, {\n    value: value,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n}\n_s(OrderContextProvider, \"6FDFtBXCcSf9mgrov98zIJK7k2Q=\");\n_c = OrderContextProvider;\nvar _c;\n$RefreshReg$(_c, \"OrderContextProvider\");","map":{"version":3,"names":["createContext","useState","useMemo","useEffect","OrderContext","OrderContextProvider","props","orderCounts","setOrderCounts","products","Map","options","totals","setTotals","total","productsTotal","calculateSubtotal","optionsTotal","orderCountes","value","updateItemCount","itemName","newItemCount","orderType","newOrderCounts","orderCountsMap","set","parseInt"],"sources":["/Users/jihoon/Desktop/study/tdd-jest/test-shop/frontend/src/contexts/OrderContext.js"],"sourcesContent":["import { createContext, useState, useMemo, useEffect } from \"react\"\n\nconst OrderContext = createContext();\n\nexport function OrderContextProvider(props) {\n  const [orderCounts, setOrderCounts] = useState({\n    products: new Map(),\n    options: new Map()\n  })\n\n  const [totals, setTotals] = useState({\n    products: 0,\n    options: 0,\n    total: 0\n  })\n\n  useEffect(() => {\n    const productsTotal = calculateSubtotal('products', orderCounts);\n    const optionsTotal = calculateSubtotal('options', orderCounts);\n    const total = productsTotal + optionsTotal;\n\n\n  }, [orderCountes])\n\n  // useMemo 자식 컴포넌트들의 재랜더링 최적화\n  const value = useMemo(() => {\n    function updateItemCount(itemName, newItemCount, orderType) {\n      const newOrderCounts = { ...orderCounts };\n\n      const orderCountsMap = orderCounts[orderType];\n      orderCountsMap.set(itemName, parseInt(newItemCount));\n\n      setOrderCounts(newOrderCounts);\n    }\n\n\n    return [{ ...orderCounts }, updateItemCount]\n  }, [orderCounts])\n\n  return <OrderContext.Provider value={value} {...props} />\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,QAAQ,OAAO;AAAA;AAEnE,MAAMC,YAAY,gBAAGJ,aAAa,EAAE;AAEpC,OAAO,SAASK,oBAAoB,CAACC,KAAK,EAAE;EAAA;EAC1C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC;IAC7CQ,QAAQ,EAAE,IAAIC,GAAG,EAAE;IACnBC,OAAO,EAAE,IAAID,GAAG;EAClB,CAAC,CAAC;EAEF,MAAM,CAACE,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC;IACnCQ,QAAQ,EAAE,CAAC;IACXE,OAAO,EAAE,CAAC;IACVG,KAAK,EAAE;EACT,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACd,MAAMY,aAAa,GAAGC,iBAAiB,CAAC,UAAU,EAAET,WAAW,CAAC;IAChE,MAAMU,YAAY,GAAGD,iBAAiB,CAAC,SAAS,EAAET,WAAW,CAAC;IAC9D,MAAMO,KAAK,GAAGC,aAAa,GAAGE,YAAY;EAG5C,CAAC,EAAE,CAACC,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMC,KAAK,GAAGjB,OAAO,CAAC,MAAM;IAC1B,SAASkB,eAAe,CAACC,QAAQ,EAAEC,YAAY,EAAEC,SAAS,EAAE;MAC1D,MAAMC,cAAc,GAAG;QAAE,GAAGjB;MAAY,CAAC;MAEzC,MAAMkB,cAAc,GAAGlB,WAAW,CAACgB,SAAS,CAAC;MAC7CE,cAAc,CAACC,GAAG,CAACL,QAAQ,EAAEM,QAAQ,CAACL,YAAY,CAAC,CAAC;MAEpDd,cAAc,CAACgB,cAAc,CAAC;IAChC;IAGA,OAAO,CAAC;MAAE,GAAGjB;IAAY,CAAC,EAAEa,eAAe,CAAC;EAC9C,CAAC,EAAE,CAACb,WAAW,CAAC,CAAC;EAEjB,oBAAO,QAAC,YAAY,CAAC,QAAQ;IAAC,KAAK,EAAEY,KAAM;IAAA,GAAKb;EAAK;IAAA;IAAA;IAAA;EAAA,QAAI;AAC3D;AAAC,GApCeD,oBAAoB;AAAA,KAApBA,oBAAoB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}